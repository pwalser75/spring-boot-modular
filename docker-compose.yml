version: '3.0'

networks:
  elk:

volumes:
  elasticsearch:
    driver: local

services:
  spring-boot-modular:
    container_name: "spring-boot-modular"
    build: '.'
    restart: unless-stopped
    ports:
      - "8443:443"
      - "8080:80"
    environment:
      DATABASE_URL: 'jdbc:mysql://spring-boot-modular-db:3306/prod_db'
      DATABASE_SCHEMA: 'prod_db'
      DATABASE_ADMIN_USER: 'root'
      DATABASE_ADMIN_PASSWORD: 'root-secret'
      DATABASE_USER: 'prod-user'
      DATABASE_PASSWORD: 'prod-secret'
    depends_on:
      - mysql
      - elasticsearch
      - logstash
      - kibana
    volumes:
      - ./docker/config:/config:ro

  mysql:
    container_name: spring-boot-modular-db
    restart: unless-stopped
    image: mysql:latest
    ports:
      - "13306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'root-secret'
      MYSQL_DATABASE: 'prod_db'
      MYSQL_USER: 'prod-user'
      MYSQL_PASSWORD: 'prod-secret'
    volumes:
      - ./docker/database:/var/lib/mysql

  elasticsearch:
    environment:
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.1
    networks:
      elk: null
    ports:
      - 9200:9200
    restart: unless-stopped
    volumes:
      - ./docker/elasticsearch:/usr/share/elasticsearch/data:rw

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.2.1
    depends_on:
      - elasticsearch
    networks:
      elk: null
    ports:
      - 5044:5044
    restart: unless-stopped

  kibana:
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
    image: docker.elastic.co/kibana/kibana-oss:6.2.1
    networks:
      elk: null
    ports:
      - 5601:5601
    restart: unless-stopped