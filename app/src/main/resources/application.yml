info:
  app:
    name: "spring-multi-module"
    description: "Spring Boot Multi Module Project"
    version: "1.0.0-SNAPSHOT"

# Spring configuration
spring:
  application.name: "spring-multi-module"
  profiles.active: performance-logging
  main:
    lazy-initialization: true
  datasource:
    url: jdbc:h2:file:./db/h2-database
    username: test
    password: test
    driver-class-name: org.h2.Driver
    tomcat:
      removeAbandoned: true
      removeAbandonedTimeout: 120
      logAbandoned: true
      maxActive: 50
      maxIdle: 5
      maxWait: 1000
      validationQuery: "select 1"
      testOnBorrow: true
      testOnConnect: true
      testWhileIdle: true
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: TEST
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    parameters:
      schema: TEST
  cache:
    type: jcache
    jcache:
      provider: org.ehcache.jsr107.EhcacheCachingProvider
      config: classpath:ehcache.xml

# TLS configuration - enable HTTP2 and HTTPS
server:
  port: 8443
  http2:
    enabled: true
  ssl:
    enabled: true
    protocol: TLSv1.2
    enabled-protocols: TLSv1.2+TLSv1.3
    ciphers: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA
    key-alias: "test-server"
    key-store: "classpath:server-keystore.jks"
    key-store-password: "keystore"
    key-password: "keystore"

# HTTP port for redirection to HTTPS - uncomment to activate
#http.server.port: 80

# Actuator configuration, expose /health, /info and /metrics endpoints
management:
  endpoints:
    web:
      base-path: /actuator
      exposure.include: health,info,metrics,prometheus
  endpoint.health.show-details: always

# JWT authentication configuration
ch.frostnova.platform.security:
  auth: jwt
  signing:
    key-type: EC
    public-key: jwt.pub.pem
    private-key: jwt.pem
